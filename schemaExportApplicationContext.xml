<?xml version="1.0" encoding="UTF-8"?>
<!--
Spring Root Application Context.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/aop
                           http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-2.5.xsd"
       default-autowire="byName">

    <!-- load configuration properties from the classpath -->
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:application.properties</value>
                <value>classpath:site.properties</value>
            </list>
        </property>
    </bean>

    <!-- ########################################################################################################### -->
    <!-- PERSISTENCE LAYER
         The application is persisted using Hibernate3 as the underlying ORM, accessed via Spring.

         One aspect of the persistence layer is not configured here but in the servlet configuration:
         The OpenSessionInViewInterceptor.                                                                           -->
    <!-- ########################################################################################################### -->

    <!-- Configure the datasource -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          destroy-method="close"
          p:url="${datasource.url}"
          p:driverClassName="${datasource.driver}"
          p:username="${datasource.user}"
          p:password="${datasource.password}"/>

    <!-- Configure the Hibernate session factory and name all mapped classes -->
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="annotatedClasses">
            <list>
                <value>ch.ethz.replay.ui.scheduler.impl.RecordingImpl</value>
                <value>ch.ethz.replay.ui.scheduler.impl.RecordingSeriesImpl</value>
                <value>ch.ethz.replay.ui.scheduler.impl.EventSeriesImpl</value>
                <value>ch.ethz.replay.ui.scheduler.impl.DeviceTypeImpl</value>
                <value>ch.ethz.replay.ui.scheduler.impl.SimpleLocation</value>
                <value>ch.ethz.replay.ui.scheduler.impl.Deletion</value>
                <!-- Person -->
                <value>ch.ethz.replay.ui.scheduler.impl.PersonImpl</value>
                <value>ch.ethz.replay.ui.scheduler.external.common.LdapPerson</value>
                <!-- Attachment -->
                <value>ch.ethz.replay.ui.scheduler.impl.DocumentAttachmentImpl</value>
                <value>ch.ethz.replay.ui.scheduler.impl.JobTicketAttachmentImpl</value>
                <value>ch.ethz.replay.ui.scheduler.impl.DublinCoreAttachmentImpl</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.format_sql">true</prop>
                <!-- Set @Id of deleted entities to null -->
                <!--<prop key="hibernate.use_identifier_rollback">true</prop>-->
            </props>
        </property>
        <property name="eventListeners">
            <map>
                <entry key="save">
                    <list>
                        <ref bean="persistenceLifecycleListener"/>
                        <ref bean="autoTimestampUpdater"/>
                        <bean class="org.hibernate.event.def.DefaultSaveEventListener"/>
                    </list>
                </entry>
                <entry key="update">
                    <list>
                        <ref bean="persistenceLifecycleListener"/>
                        <ref bean="autoTimestampUpdater"/>
                        <bean class="org.hibernate.event.def.DefaultUpdateEventListener"/>
                    </list>
                </entry>
                <entry key="save-update">
                    <list>
                        <ref bean="persistenceLifecycleListener"/>
                        <ref bean="autoTimestampUpdater"/>
                        <bean class="org.hibernate.event.def.DefaultSaveOrUpdateEventListener"/>
                    </list>
                </entry>
                <entry key="merge">
                    <list>
                        <!-- Todo persistenceLifecycleListener -->
                        <ref bean="autoTimestampUpdater"/>
                        <bean class="org.hibernate.event.def.DefaultMergeEventListener"/>
                    </list>
                </entry>
                <entry key="post-load">
                    <list>
                        <ref bean="persistenceLifecycleListener"/>
                        <bean class="org.hibernate.event.def.DefaultPostLoadEventListener"/>
                    </list>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="autoTimestampUpdater"
          class="ch.ethz.replay.ui.common.util.hibernate.AutoTimestampOnUpdateListener"
          p:precision="1000"/>

    <bean id="persistenceLifecycleListener"
          class="ch.ethz.replay.ui.common.util.hibernate.PersistenceLifecycleEventListener"/>

    <!--
    Configure the Transaction Manager
    If the bean name is "transactionManager" configuration in the <tx:annotation-driven/> Tag
    can be omitted.
    -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"/>

    <!--
    Enable the configuration of transactional behavior based on annotations
    set proxy-target-class to true otherwise annotated beans are of some $Proxy12 type and
    cannot be injected anymore.
    -->
    <tx:annotation-driven proxy-target-class="true"/>
</beans>