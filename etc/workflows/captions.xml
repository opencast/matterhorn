<?xml version="1.0" encoding="UTF-8"?>
<definition xmlns="http://workflow.opencastproject.org">

  <id>caption</id>
  <title>Add captions</title>
  <description>
    A simple worklow to add caption to already processed recording. 
  </description>
  
    <configuration_panel>
  <![CDATA[
    <fieldset>
      <legend>Captions</legend>
      <ul class="oc-ui-checkbox-list">
        <li class="ui-helper-clearfix">
          <span id="captionconfig">
            <input id="overwriteCaption" name="overwriteCaption" type="checkbox" class="configField holdCheckbox" value="true"/>
            <span id="i18n_overwrite_caption">&nbsp;Overwrite caption file if present.</span>
          </span>
        </li>
      </ul>
    </fieldset>

    <script type="text/javascript">
      var ocWorkflowPanel = ocWorkflowPanel || {};
      ocWorkflowPanel.registerComponents = function(components){
        /* components with keys that begin with 'org.opencastproject.workflow.config' will be passed
         * into the workflow. The component's nodeKey must match the components array key.
         *
         * Example:'org.opencastproject.workflow.config.myProperty' will be availible at ${my.property}
         */
        components['org.opencastproject.workflow.config.overwriteCaption'] = new ocAdmin.Component(
          ['trimHold'],
          {nodeKey: 'org.opencastproject.workflow.config.overwriteCaption'},
          {getValue: function(){ return this.fields.overwriteCaption.is(":checked"); }
          });
      }
      ocWorkflowPanel.setComponentValues = function(values, components){
        components['org.opencastproject.workflow.config.overwriteCaption'].setValue(values['org.opencastproject.workflow.config.overwriteCaption']);
      }
    </script>
  ]]>
  </configuration_panel>

  <operations>

    <!-- hold for captions -->
    <operation
      id="caption"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Waiting for user to upload captions">
      <configurations>
        <configuration key="target-tags">engage</configuration>
      </configurations>
    </operation>

    <!-- Distribute to download server -->
    <operation
      id="distribute-download"
      max-attempts="2"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Distributing to progressive downloads">
      <configurations>
        <configuration key="source-tags">engage</configuration>
        <configuration key="target-tags">publish</configuration>
      </configurations>
    </operation>
 
    <!-- Publish to engage search index -->
    <operation
      id="publish"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Published">
      <configurations>
        <configuration key="source-tags">publish</configuration>
      </configurations>
    </operation>
    
    <!-- Archive the current state of the mediapackage -->
    <operation
      id="archive"
      fail-on-error="true"
      exception-handler-workflow="error"
      description="Archiving">
    </operation>

    <!-- Cleanup the working file repository -->
    <operation
      id="cleanup"
      fail-on-error="false"
      description="Cleaning up">
    </operation>
    
    
  </operations>

</definition>
