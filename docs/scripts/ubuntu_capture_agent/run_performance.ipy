import sys

!sudo rm -rf oc_perf
!sudo mkdir -p /oc_perf
!sudo mount -t tmpfs -o size=512M,mode=0777 tmpfs /oc_perf

felixDir = "/home/matterhorn/capture-agent/felix-framework-2.0.4"
matterhornTrunk = "/home/matterhorn/capture-agent/matterhorn-source"

datafiles = !ls performance_tests
for file in datafiles:
        #Save the current dir
        pushd .
        #Find out if felix is running and if so whack it
        lines = !ps aux | grep DM2
        if len(lines.grep("DM2")) > 0:
                pid = lines.grep("DM2").fields(1)[0]
                !sudo kill -9 $pid

	#Remove any Windows newlines
        datafile = open("performance_tests/"+file,"r")
        props=dict()
        for line in datafile:
                props[line.split("=")[0]]=line.replace("\r","").split("=")[1]

        !mkdir /oc_perf/$props["capture.recording.id"]

	#Set the logging correctly and start Felix
        cd $felixDir/conf/services/
        !rm -f org.ops4j.pax.logging.properties
        !svn up
        !sed -i "s/log4j.logger.org.opencastproject.*/log4j.logger.org.opencastproject.capture.pipeline=TRACE/g" org.ops4j.pax.logging.properties
        !$felixDir/bin/start_matterhorn.sh 2> /dev/null &
        cd $matterhornTrunk/docs/scripts/ubuntu_capture_agent/

        #Wait until Felix starts up
        running=!curl --digest -u admin:opencast -I -H "X-Requested-Auth: Digest" http://localhost:8080/state/rest/state
        while (len(running.grep("200 OK")) < 1 ):
                import time
                time.sleep(1)
                running=!curl --digest -u admin:opencast -I -H "X-Requested-Auth: Digest" http://localhost:8080/state/rest/state;
        time.sleep(3) # just in case startCapture endpoint not up yet, but soon will be

	#Start the test with the appropriate config file
        data_file="performance_tests/" + file
        !curl --digest -u admin:opencast -H "X-Requested-Auth: Digest" --data-urlencode config@$data_file http://localhost:8080/capture/rest/startCapture

        #Start dstat in the new dir and block for 60 seconds
        dstat_output="/oc_perf/" + props["capture.recording.id"].strip("\n") + "/dstat.log"
        !sudo dstat -cdm --load --output $dstat_output 1 900

	time.sleep(1) # make sure the headers and such are written out

        #Find out if felix is running and if so whack it
        lines = !ps aux | grep DM2
        if len(lines.grep("DM2")) > 0:
                pid = lines.grep("DM2").fields(1)[0]
                !sudo kill -9 $pid
        #Copy over the recordings into our tmp dir
	recordingDir = "/tmp/opencast/cache/captures/" + props["capture.recording.id"].strip("\n")
	!sudo mv $felixDir/logs/opencast.log $recordingDir
        !sudo cp -r $recordingDir /oc_perf/
        popd

#Great, we're done.  Move the temp dir onto disk
!mkdir -p oc_perf
!cp -R /oc_perf/* ./oc_perf/
!sudo umount /oc_perf
