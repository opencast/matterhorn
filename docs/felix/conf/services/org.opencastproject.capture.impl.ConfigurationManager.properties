#Please note that the intervals and times specified in this file are in *seconds*

# The URL of the caching directory under the root directory
capture.filesystem.cache.url=${org.opencastproject.storage.dir}/cache/
# The URL of the volatile directory under the root directory
capture.filesystem.volatile.url=${org.opencastproject.storage.dir}/volatile/
# The root URL where the captures should be stored prior to ingest
capture.filesystem.cache.capture.url=${capture.filesystem.cache.url}/captures/

# The remote URL where the capture schedule should be retrieved
capture.schedule.remote.endpoint.url=${org.opencastproject.server.url}/scheduler/rest/getCalendarForCaptureAgent
# The time between attempts to fetch updated calendar data
capture.schedule.remote.polling.interval=60
# The local URL of the cached copy of the capture schedule
capture.schedule.cache.url=${capture.filesystem.cache.url}/schedule.ics

# Location of a centralized configuration file
capture.config.remote.endpoint.url=
# The time to wait between updating the local copy of the configuration
capture.config.remote.polling.interval=600
# The file to cache the server config, if any
capture.config.cache.url=${capture.filesystem.cache.url}/capture.properties

# The name of the agent
capture.agent.name=demo_capture_agent
# The URL of the remote state service
capture.agent.state.remote.endpoint.url=${org.opencastproject.server.url}/capture-admin/rest/agents
# The time between attempts to push the agent's state to the state service
capture.agent.state.remote.polling.interval=10
# The time between attempts to push the agent's capabilities to the state service
capture.agent.capabilities.remote.polling.interval=10

# The URL of the remote recording state service
capture.recording.state.remote.endpoint.url=${org.opencastproject.server.url}/capture-admin/rest/recordings

# The URL to send the capture data to during ingest
capture.ingest.endpoint.url=${org.opencastproject.server.url}/ingest/rest/addZippedMediaPackage
# The retry interval for attempting ingest
capture.ingest.retry.interval=300

# The maximum length of a capture, defaults to 8 hours (28800 seconds)
capture.max.length=28800

# The default time between subsequent executions of the capture cleaner
capture.cleaner.interval=3600
# The default minimum available disk space, under which recordings are erased from the system
# IN BYTES
capture.cleaner.mindiskspace=536870912
# The default maximum time (in days) a recording should be kept if there's enough disk space available
capture.cleaner.maxarchivaldays=1

# confidence monitoring outputs images to this directory
capture.confidence.video.location=${org.opencastproject.storage.dir}/volatile/


# define the names of the inputs
capture.device.names=MOCK_SCREEN,MOCK_PRESENTER,MOCK_MICROPHONE

# The following lines create three example inputs for the capture agent
# Each example consists of three lines:
# 1:  The source, in this case a file which is listed in the project pom.xml as a dependency.
#     To use a real device you would put the device on this line (eg:  /dev/my_capture_card).
# 2:  The output file name.
#     This can be pretty much anything as long as the extension matches the source/container format of the source.
# 3:  The flavour of the input.
#     This flavour must be defined from the selection in org.opencastproject.media.mediapackage.MediaPackageElements
# To make a new input you must create a uniq name (eg:  MOCK_MY_EXAMPLE), and then create the appropriate lines as well:
#capture.device.MOCK_MY_EXAMPLE.src=/dev/my_capture_card
#capture.device.MOCK_MY_EXAMPLE.outputfile=example_out.mpg
#capture.device.MOCK_MY_EXAMPLE.flavor=presentation/source

#Create the screen capture
capture.device.MOCK_SCREEN.src=${M2_REPO}/org/opencastproject/samples/screen/1.0/screen-1.0.mpg
capture.device.MOCK_SCREEN.outputfile=screen_out.mpg
capture.device.MOCK_SCREEN.flavor=presentation/source

#Create the presenter capture
capture.device.MOCK_PRESENTER.src=${M2_REPO}/org/opencastproject/samples/camera/1.0/camera-1.0.mpg
capture.device.MOCK_PRESENTER.outputfile=camera_out.mpg
capture.device.MOCK_PRESENTER.flavor=presentation/source

#Create the audio capture
capture.device.MOCK_MICROPHONE.src=${M2_REPO}/org/opencastproject/samples/audio/1.0/audio-1.0.mp3
capture.device.MOCK_MICROPHONE.outputfile=audio_out.mp3
capture.device.MOCK_MICROPHONE.flavor=presentation/source
