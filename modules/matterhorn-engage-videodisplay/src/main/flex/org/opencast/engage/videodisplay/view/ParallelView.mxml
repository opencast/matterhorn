<?xml version = "1.0" encoding = "utf-8"?>
<!--
     /**
     *  Copyright 2009 The Regents of the University of California
     *  Licensed under the Educational Community License, Version 2.0
     *  (the "License"); you may not use this file except in compliance
     *  with the License. You may obtain a copy of the License at
     *
     *  http://www.osedu.org/licenses/ECL-2.0
     *
     *  Unless required by applicable law or agreed to in writing,
     *  software distributed under the License is distributed on an "AS IS"
     *  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
     *  or implied. See the License for the specific language governing
     *  permissions and limitations under the License.
     *
     */
-->
<mx:Canvas 
    width = "100%"
    height = "100%"
    xmlns:players = "com.adobe.strobe.players.*"
    xmlns:mx = "http://www.adobe.com/2006/mxml"
    xmlns:view = "org.opencast.engage.videodisplay.view.*"
    xmlns:osmf = "com.osmf.*"
    backgroundColor="#AAAAAA"
    >

    <mx:Script>
        <![CDATA[
            import mx.controls.ProgressBar;
            import mx.controls.Button;
            import flash.display.MovieClip;
            import mx.core.Application;
            import mx.controls.Alert;
            import mx.core.Container;
            import org.osmf.layout.ScaleMode;
            import org.osmf.containers.MediaContainer;
            import org.osmf.media.MediaPlayer;
           
            import org.opencast.engage.videodisplay.model.VideodisplayModel;
            import flash.events.MouseEvent;
            import org.osmf.elements.VideoElement;
         

            [Bindable]
            public var model:VideodisplayModel;
            public var pauseButton:Button;
            public var playButton:Button;
            public var progressBG:ProgressBar;

            /**
             * initPlayerLeft
             * Init the single Videoplayer, create a new Media Container, and add the new container to the UI Component.
             */
            public function initPlayer():void
            {
                model.parallelMediaContainer = new MediaContainer();
                
                this.mediaContainerUIComponent.container = model.parallelMediaContainer;

                pauseButton = new Button();
                pauseButton.y = 350;
                pauseButton.x = 20;
                pauseButton.label = "pa";
                pauseButton.width = 20;
                pauseButton.height = 20;
                pauseButton.useHandCursor = true;
                pauseButton.buttonMode = true;
                pauseButton.addEventListener( MouseEvent.CLICK, _onPauseClick );
                btn1.addChild( pauseButton );

                playButton = new Button();
                playButton.y = 350;
                playButton.x = 60
                playButton.label = "pl";
                playButton.width = 20;
                playButton.height = 20;
                playButton.useHandCursor = true;
                playButton.buttonMode = true;
                playButton.addEventListener( MouseEvent.CLICK, _onPlayClick );
                btn2.addChild( playButton );

                progressBG = new ProgressBar();
                progressBG.y = 400;
                progressBG.width = 100;
                progressBG.height = 100;
                progressBG.useHandCursor = true;
                progressBG.buttonMode = true;
                progressBG.addEventListener( MouseEvent.CLICK, _onSeek );
                pg.addChild( progressBG );

            }

            /**
             * resizeVideodisplay
             * When the learner resize the Videodisplay in the Browser call the ResizeVideodisplayEvent.
             */
            public function resizeVideodisplay():void
            {
               
            }

            //USER EVENT HANDLERS
            protected function _onPauseClick( p_evt:MouseEvent ):void
            {
                //Marker 3: Add call to pause method
                model.player.pause();

            }

            //USER EVENT HANDLERS
            protected function _onPlayClick( p_evt:MouseEvent ):void
            {
                //Marker 3: Add call to pause method
                model.player.play();

            }

            protected function _onSeek( p_evt:MouseEvent ):void
            {
                //Marker 8: Call the seek method of the MediaPlayer passing it the appropriate time determined by the click on the progress track
                var seekTo:Number = model.player.duration * ( p_evt.target.mouseX / p_evt.target.width );
                model.player.seek( seekTo );
            }
        ]]>
    </mx:Script>

    <osmf:MediaContainerUIComponent 
        id = "mediaContainerUIComponent"
        addedToStage = "initPlayer()"
        width = "100%"
        height = "100%"
        />

    <mx:UIComponent 
        id = "btn1"
        />

    <mx:UIComponent 
        id = "btn2"
        />

    <mx:UIComponent 
        id = "pg"
        />
</mx:Canvas>
