<?xml version="1.0" encoding="utf-8"?>
<!--
	 /**
	 *  Copyright 2009 The Regents of the University of California
	 *  Licensed under the Educational Community License, Version 2.0
	 *  (the "License"); you may not use this file except in compliance
	 *  with the License. You may obtain a copy of the License at
	 *
	 *  http://www.osedu.org/licenses/ECL-2.0
	 *
	 *  Unless required by applicable law or agreed to in writing,
	 *  software distributed under the License is distributed on an "AS IS"
	 *  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
	 *  or implied. See the License for the specific language governing
	 *  permissions and limitations under the License.
	 *
	 */
-->
<mx:Canvas width="100%"
		   height="100%"
		   xmlns:players="com.adobe.strobe.players.*"
		   xmlns:mx="http://www.adobe.com/2006/mxml"
		   xmlns:view="org.opencast.engage.videodisplay.view.*"
		   xmlns:osmf="com.osmf.*"
		   backgroundColor="#FFFFFF">

	<mx:Script>
		<![CDATA[
			import com.adobe.cairngorm.control.CairngormEventDispatcher;
			import flash.display.MovieClip;
			import flash.events.MouseEvent;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.controls.ProgressBar;
			import mx.controls.sliderClasses.Slider;
			import mx.core.Application;
			import mx.core.Container;
			import mx.events.SliderEvent;
			import org.opencast.engage.videodisplay.event.VideoplayerInteractionEvent;
			import org.opencast.engage.videodisplay.model.VideodisplayModel;
			import org.osmf.containers.MediaContainer;
			import org.osmf.elements.VideoElement;
			import org.osmf.layout.ScaleMode;
			import org.osmf.media.MediaPlayer;

			[Bindable]
			public var model:VideodisplayModel=VideodisplayModel.getInstance();

			public var pauseButton:Button;
			public var playButton:Button;
			public var progressBG:ProgressBar;

			private var undef:int;

			/**
			 * initPlayerLeft
			 * Init the single Videoplayer, create a new Media Container, and add the new container to the UI Component.
			 */
			public function initPlayer():void
			{
				//model.parallelMediaContainer = new MediaContainer();

				//this.mediaContainerUIComponent.container = model.mediaContainer;
				mediaContainerUIComponent.container=model.parallelMediaContainer;

				pauseButton=new Button();
				pauseButton.y=20;
				pauseButton.x=20;
				pauseButton.label="pa";
				pauseButton.width=20;
				pauseButton.height=20;
				pauseButton.useHandCursor=true;
				pauseButton.buttonMode=true;
				pauseButton.addEventListener(MouseEvent.CLICK, _onPauseClick);
				btn1.addChild(pauseButton);

				playButton=new Button();
				playButton.y=40;
				playButton.x=60
				playButton.label="pl";
				playButton.width=20;
				playButton.height=20;
				playButton.useHandCursor=true;
				playButton.buttonMode=true;
				playButton.addEventListener(MouseEvent.CLICK, _onPlayClick);
				btn2.addChild(playButton);

				progressBG=new ProgressBar();
				progressBG.y=60;
				progressBG.width=100;
				progressBG.height=100;
				progressBG.useHandCursor=true;
				progressBG.buttonMode=true;
				progressBG.addEventListener(MouseEvent.CLICK, _onSeek);
				pg.addChild(progressBG);

				model.mediaContainerUIComponent=mediaContainerUIComponent;
			}

			/**
			 * resizeVideodisplay
			 * When the learner resize the Videodisplay in the Browser call the ResizeVideodisplayEvent.
			 */
			public function resizeVideodisplay():void
			{

			}

			//USER EVENT HANDLERS
			protected function _onPauseClick(p_evt:MouseEvent):void
			{
				var videoplayerInteractionEvent:VideoplayerInteractionEvent=new VideoplayerInteractionEvent("PAUSE", undef);
				CairngormEventDispatcher.getInstance().dispatchEvent(videoplayerInteractionEvent);
			}

			protected function _onPlayClick(p_evt:MouseEvent):void
			{
				var videoplayerInteractionEvent:VideoplayerInteractionEvent=new VideoplayerInteractionEvent("PLAY", undef);
				CairngormEventDispatcher.getInstance().dispatchEvent(videoplayerInteractionEvent);
			}

			protected function _onSeek(p_evt:MouseEvent):void
			{
				var seekTo:Number=model.player.duration * (p_evt.target.mouseX / p_evt.target.width);
				var videoplayerInteractionEvent:VideoplayerInteractionEvent=new VideoplayerInteractionEvent("SEEK", seekTo);
				CairngormEventDispatcher.getInstance().dispatchEvent(videoplayerInteractionEvent);
			}
		]]>
	</mx:Script>

	<osmf:MediaContainerUIComponent id="mediaContainerUIComponent"
									addedToStage="initPlayer()"
									width="100%"
									height="100%"
									includeInLayout="true"/>

	<mx:UIComponent id="btn1"/>

	<mx:UIComponent id="btn2"/>

	<mx:UIComponent id="pg"/>
</mx:Canvas>
