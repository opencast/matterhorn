<?xml version = "1.0" encoding = "utf-8"?>
<!--
     /**
     *  Copyright 2009 The Regents of the University of California
     *  Licensed under the Educational Community License, Version 2.0
     *  (the "License"); you may not use this file except in compliance
     *  with the License. You may obtain a copy of the License at
     *
     *  http://www.osedu.org/licenses/ECL-2.0
     *
     *  Unless required by applicable law or agreed to in writing,
     *  software distributed under the License is distributed on an "AS IS"
     *  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
     *  or implied. See the License for the specific language governing
     *  permissions and limitations under the License.
     *
     */
-->
<mx:Canvas 
    xmlns:mx = "http://www.adobe.com/2006/mxml"
    backgroundAlpha = "1.0"
    currentState = "{model.currentPlayerState}"
    xmlns:view = "org.opencast.engage.videodisplay.view.*"
    verticalScrollPolicy = "off"
    horizontalScrollPolicy = "off"
    >

    <mx:Script>
        <![CDATA[
            import org.opencast.engage.videodisplay.control.event.SetVolumeEvent;
            import org.opencast.engage.videodisplay.state.PlayerState;
            import org.opencast.engage.videodisplay.control.event.VideoControlEvent;
            import org.swizframework.Swiz;
            import org.opencast.engage.videodisplay.model.VideodisplayModel;
            import mx.controls.Alert;
            import mx.core.Application;

            [Autowire]
            [Bindable]
            public var model:VideodisplayModel;

            /**
             * showButton
             *
             * Show the Button in the middle of the video
             *
             * */
            private function showButton():void
            {
                if ( this.currentState == PlayerState.PLAYING )
                {
                    pauseButton_up.visible = true;
                }
                else
                {
                    playButton_up.visible = true;
                }
            }

            /**
             * hideButton
             *
             * Hide the Button in the middle of the video
             *
             * */
            private function hideButton():void
            {
                if ( this.currentState == PlayerState.PLAYING )
                {
                    pauseButton_up.visible = false;
                }
                else
                {
                    playButton_up.visible = false;
                }

            }

            /**
             * toggleFullScreen
             *
             * Toggle between normal screen and full screen mode
             *
             **/
            private function toggleFullScreen():void
            {
                try
                {
                    switch ( Application.application.stage.displayState )
                    {
                        case StageDisplayState.FULL_SCREEN:
                            /* If already in full screen mode, switch to normal mode. */
                            Application.application.stage.displayState = StageDisplayState.NORMAL;
                            break;
                        default:
                            /* If not in full screen mode, switch to full screen mode. */
                            Application.application.stage.displayState = StageDisplayState.FULL_SCREEN;
                            break;
                    }
                }
                catch ( err:SecurityError )
                {
                    // ignore
                }
            }
        ]]>
    </mx:Script>

    <mx:states>

        <mx:State 
            name = "{PlayerState.PLAYING}"
            >

            <mx:SetProperty 
                target = "{playButton_up}"
                name = "visible"
                value = "false"
                />

            <mx:SetProperty 
                target = "{pauseButton_up}"
                name = "visible"
                value = "false"
                />
        </mx:State>

        <mx:State 
            name = "{PlayerState.PAUSING}"
            >

            <mx:SetProperty 
                target = "{playButton_up}"
                name = "visible"
                value = "true"
                />

            <mx:SetProperty 
                target = "{pauseButton_up}"
                name = "visible"
                value = "false"
                />
        </mx:State>
    </mx:states>

    <mx:transitions>

        <mx:Transition 
            id = "fadeOut"
            fromState = "{PlayerState.PLAYING}"
            toState = "{PlayerState.PAUSING}"
            >

            <mx:Parallel 
                target = "{curtain}"
                />
        </mx:Transition>

        <mx:Transition 
            id = "fadeIn"
            fromState = "{PlayerState.PAUSING}"
            toState = "{PlayerState.PLAYING}"
            >

            <mx:Parallel 
                target = "{curtain}"
                />
        </mx:Transition>
    </mx:transitions>

    <mx:Canvas 
        id = "curtain"
        backgroundColor = "#000000"
        backgroundAlpha = "0.0"
        width = "60"
        height = "60"
        horizontalCenter = "0"
        verticalCenter = "0"
        rollOver = "{ showButton(); }"
        rollOut = "{ hideButton(); }"
        verticalScrollPolicy = "off"
        horizontalScrollPolicy = "off"
        />

    <mx:Button 
        id = "playButton_up"
        click = "Swiz.dispatchEvent( new VideoControlEvent(VideoControlEvent.PLAY));"
        width = "{this.width/5}"
        height = "{playButton_up.width}"
        styleName = "PlayBig"
        visible = "false"
        verticalCenter = "0"
        horizontalCenter = "0"
        buttonMode = "true"
        rollOver = "{ showButton(); }"
        rollOut = "{ hideButton(); }"
        toolTip = "Play"
        />

    <mx:Button 
        id = "pauseButton_up"
        click = "Swiz.dispatchEvent( new VideoControlEvent(VideoControlEvent.PAUSE));"
        width = "{this.width/5}"
        height = "{pauseButton_up.width}"
        styleName = "PauseBig"
        visible = "false"
        verticalCenter = "0"
        horizontalCenter = "0"
        buttonMode = "true"
        rollOver = "{ showButton(); }"
        rollOut = "{ hideButton(); }"
        toolTip = "Pause"
        />

    <mx:HBox 
        width = "100%"
        height = "100%"
        left = "5"
        right = "5"
        top = "5"
        bottom = "0"
        verticalAlign = "bottom"
        verticalScrollPolicy = "off"
        horizontalScrollPolicy = "off"
        >

        <mx:VBox 
            width = "100%"
            verticalScrollPolicy = "off"
            horizontalScrollPolicy = "off"
            >

            <view:CaptionsView 
                id = "captionsView"
                width = "100%"
                horizontalAlign = "center"
                />

            <mx:Spacer 
                height = "20"
                visible = "{model.fullscreenMode}"
                includeInLayout = "{model.fullscreenMode}"
                />

            <view:VideocontrollerView 
                id = "videocontrollerView"
                width = "100%"
                height = "100%"
                visible = "{model.fullscreenMode}"
                includeInLayout = "{model.fullscreenMode}"
                />
        </mx:VBox>

        <mx:VBox 
            horizontalGap = "0"
            verticalGap = "0"
            >

            <mx:Button 
                id = "btn_fullscreen"
                styleName = "{ model.fullscreenMode == false ? 'Fullscreen' : 'Normalscreen' }"
                click = "{ toggleFullScreen() }"
                toolTip = "{ model.fullscreenMode == false ? 'Fullscreen' : 'Normalscreen' }"
                />

            <mx:Spacer 
                height = "5"
                />
        </mx:VBox>
    </mx:HBox>
</mx:Canvas>
