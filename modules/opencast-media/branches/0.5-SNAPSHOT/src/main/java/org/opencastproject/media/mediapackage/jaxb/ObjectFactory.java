/**
 *  Copyright 2009 The Regents of the University of California
 *  Licensed under the Educational Community License, Version 2.0
 *  (the "License"); you may not use this file except in compliance
 *  with the License. You may obtain a copy of the License at
 *
 *  http://www.osedu.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing,
 *  software distributed under the License is distributed on an "AS IS"
 *  BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 *  or implied. See the License for the specific language governing
 *  permissions and limitations under the License.
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.3 in JDK 1.6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2009.09.03 at 02:10:42 PM CEST 
//

package org.opencastproject.media.mediapackage.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java element interface generated in the
 * org.opencastproject.media.mediapackage.jaxb package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the Java representation for XML content.
 * The Java representation of XML content can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory methods for each of these are provided in
 * this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

  private final static QName _Mediapackage_QNAME = new QName("", "mediapackage");

  /**
   * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package:
   * org.opencastproject.media.mediapackage.jaxb
   * 
   */
  public ObjectFactory() {
  }

  /**
   * Create an instance of {@link ScanTypeType }
   * 
   */
  public ScanTypeType createScanTypeType() {
    return new ScanTypeType();
  }

  /**
   * Create an instance of {@link MetadataType }
   * 
   */
  public MetadataType createMetadataType() {
    return new MetadataType();
  }

  /**
   * Create an instance of {@link AudioType }
   * 
   */
  public AudioType createAudioType() {
    return new AudioType();
  }

  /**
   * Create an instance of {@link MediapackageType }
   * 
   */
  public MediapackageType createMediapackageType() {
    return new MediapackageType();
  }

  /**
   * Create an instance of {@link ChecksumType }
   * 
   */
  public ChecksumType createChecksumType() {
    return new ChecksumType();
  }

  /**
   * Create an instance of {@link CatalogType }
   * 
   */
  public CatalogType createCatalogType() {
    return new CatalogType();
  }

  /**
   * Create an instance of {@link AttachmentsType }
   * 
   */
  public AttachmentsType createAttachmentsType() {
    return new AttachmentsType();
  }

  /**
   * Create an instance of {@link EncoderType }
   * 
   */
  public EncoderType createEncoderType() {
    return new EncoderType();
  }

  /**
   * Create an instance of {@link TrackType }
   * 
   */
  public TrackType createTrackType() {
    return new TrackType();
  }

  /**
   * Create an instance of {@link VideoType }
   * 
   */
  public VideoType createVideoType() {
    return new VideoType();
  }

  /**
   * Create an instance of {@link DeviceType }
   * 
   */
  public DeviceType createDeviceType() {
    return new DeviceType();
  }

  /**
   * Create an instance of {@link AttachmentType }
   * 
   */
  public AttachmentType createAttachmentType() {
    return new AttachmentType();
  }

  /**
   * Create an instance of {@link MediaType }
   * 
   */
  public MediaType createMediaType() {
    return new MediaType();
  }

  /**
   * Create an instance of {@link JAXBElement }{@code <}{@link MediapackageType }{@code >}
   * 
   */
  @XmlElementDecl(namespace = "", name = "mediapackage")
  public JAXBElement<MediapackageType> createMediapackage(MediapackageType value) {
    return new JAXBElement<MediapackageType>(_Mediapackage_QNAME, MediapackageType.class, null, value);
  }

}
