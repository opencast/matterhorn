####
# Profile definitions for the encoding service.
#
# In order to understand how to configure a format, take a look a the
# documentation below:
#
# profile.<format>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# profile.<format>.output:
#     Type of the distribution format.
#     [video|image]
#
# profile.<format>.suffix:
#     Extension that will be appended to the download.
#
# profile.<format>.mimetype:
#     Mime type used to provide proper content types.
#
# profile.<format>.flavor:
#     Flavor as used by the media package to identify elements. Note that the flavor
#     should be formatted like a mime type, which means flavor/subflavor.
#     
#     Usually, the flavor will have a meaning to the application logic, e. g.
#     you would assign the encoding profile for iTunes U video the flavor itunes/video,
#     while the flavor of the flash version of the presenter movie might read
#     engage/presenter, meaning that it's intended to be used by the engage
#     player.
#
#     If you don't know what to specify for the flavor, just leave it empty.
#
# profile.<format>.input:
#     Track categories for which this format is applicable.
#     Known categories are:
#     - audio : for tracks containing only audio streams
#     - video : tracks containg video and probably audio
#     - enhanced-audio : for so-called enhanced audio tracks
##

# Distribution format definition for mpeg4 quicktime presenter/presentation download
profile.mov-low.http.name = mpeg4/quicktime download
profile.mov-low.http.input = visual
profile.mov-low.http.output = visual
profile.mov-low.http.suffix = -low-dl.mov
profile.mov-low.http.mimetype = video/quicktime
profile.mov-low.http.ffmpeg.command.video = -i #{in.video.path} -s 320x240 -vcodec mpeg4 -ar 44100
profile.mov-low.http.ffmpeg.command.audio = -i #{in.audio.path} -ar 44100
profile.mov-low.http.ffmpeg.command = #{video} #{audio} -f mov #{out.dir}/#{in.video.name}#{out.suffix}

# Distribution format definition for mpeg4 avi presenter/presentation download
profile.avi-low.http.name = mpeg4/avi download
profile.avi-low.http.input = visual
profile.avi-low.http.output = visual
profile.avi-low.http.suffix = -low-dl.avi
profile.avi-low.http.mimetype = video/avi
profile.avi-low.http.ffmpeg.command.video = -i #{in.video.path} -s 320x240 -ar 44100
profile.avi-low.http.ffmpeg.command.audio = -i #{in.audio.path} -ar 44100
profile.avi-low.http.ffmpeg.command = #{video} #{audio} #{out.dir}/#{in.video.name}#{out.suffix}

# Distribution format definition for 4 by 3 flash presenter/presentation download
profile.flash.http.name = flash download
profile.flash.http.input = visual
profile.flash.http.output = visual
profile.flash.http.suffix = -25fps.flv
profile.flash.http.mimetype = video/x-flv
profile.flash.http.flavor = engage/download
profile.flash.http.ffmpeg.command.video = -i #{in.video.path} -y -r 25 -vcodec flv -b 800000 -qscale 3.5 -ar 44100
profile.flash.http.ffmpeg.command.audio = -i #{in.audio.path} -ar 44100
profile.flash.http.ffmpeg.command = #{video} #{audio} #{out.dir}/#{in.video.name}#{out.suffix}

####
# Image formats, used for covers and slide previews.
#
# ATTENTION:
# Do not change the identifier of the formats below. Various indexer plugins,
# the feed generator and the rest servlet rely on their existence.
##

# Cover image ui
profile.engage-image.http.name = image for engage
profile.engage-image.http.input = visual
profile.engage-image.http.output = image
profile.engage-image.http.suffix = .jpg
profile.engage-image.http.mimetype = image/jpeg
profile.engage-image.http.flavor = cover/ui
#profile.engage-image.http.ffmpeg.command = -i #{in.video.path} -y -r 1 -ss #{time} -s 160x120 #{out.dir}/#{in.video.name}#{out.suffix}
profile.engage-image.http.ffmpeg.command = -y -i #{in.video.path} -r 1 -ss #{time} -vframes 1 -s 160x120 #{out.dir}/#{in.video.name}#{out.suffix}

# Cover image feeds
profile.feed-image.http.name = image for feeds
profile.feed-image.http.input = visual
profile.feed-image.http.output = image
profile.feed-image.http.suffix = .jpg
profile.feed-image.http.mimetype = image/jpeg
#profile.feed-image.http.ffmpeg.command = -i #{in.video.path} -y -r 1 -ss #{time} -s 72x54 #{out.dir}/#{in.video.name}#{out.suffix}
profile.feed-image.http.ffmpeg.command = -y -i #{in.video.path} -r 1 -ss #{time} -vframes 1 -s 72x54 #{out.dir}/#{in.video.name}#{out.suffix}
