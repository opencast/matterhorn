####
# Profile definitions for the encoding service.
#
# In order to understand how to configure a format, take a look a the
# documentation below:
#
# profile.<format>.name:
#     Name of the format, used in download dialogs of the frontend.
#
# profile.<format>.output:
#     Type of the distribution format.
#     [video|image]
#
# profile.<format>.suffix:
#     Extension that will be appended to the download.
#
# profile.<format>.mimetype:
#     Mime type used to provide proper content types.
#
# profile.<format>.flavor:
#     Flavor as used by the media package to identify elements. Note that the flavor
#     should be formatted like a mime type, which means flavor/subflavor.
#     
#     Usually, the flavor will have a meaning to the application logic, e. g.
#     you would assign the encoding profile for iTunes U video the flavor itunes/video,
#     while the flavor of the flash version of the presenter movie might read
#     engage/presenter, meaning that it's intended to be used by the engage
#     player.
#
#     If you don't know what to specify for the flavor, just leave it empty.
#
# profile.<format>.input:
#     Track categories for which this format is applicable.
#     Known categories are:
#     - audio : for tracks containing only audio streams
#     - video : tracks containg video and probably audio
#     - enhanced-audio : for so-called enhanced audio tracks
##

# Distribution format definition for 4 by 3 h264 presenter/presentation downloads low
#profile.h264-low.http.name = H.264 MPEG-4 Download Low Quality (*.m4v)
profile.h264-low.http.name = Low Quality
profile.h264-low.http.input = visual
profile.h264-low.http.output = visual
profile.h264-low.http.suffix = -dl.m4v
profile.h264-low.http.mimetype = visual/x-m4v
profile.h264-low.http.flavor = 

# Distribution format definition for 4 by 3 h264 presenter/presentation downloads medium
#profile.h264-medium.http.name = H.264 MPEG-4 Download Medium Quality (*.m4v)
profile.h264-medium.http.name = Medium Quality
profile.h264-medium.http.input = visual
profile.h264-medium.http.output = visual
profile.h264-medium.http.suffix = -dm.m4v
profile.h264-medium.http.mimetype = visual/x-m4v
profile.h264-medium.http.flavor = 

# Distribution format definition for 4 by 3 h264 presenter/presentation streaming medium
#profile.h264.rtsp.name = H.264 MPEG-4 Streaming Medium Quality (*.mp4)
profile.h264.rtsp.name = Medium Quality
profile.h264.rtsp.input = visual
profile.h264.rtsp.output = visual
profile.h264.rtsp.suffix = -sm.mp4
profile.h264.rtsp.mimetype = visual/mp4v-es
profile.h264.rtsp.flavor = 

# Distribution format definition for 4 by 3 flash presenter/presentation streaming medium
profile.flash.rtmp.name = Flash Streaming Medium Quality (*.flv)
profile.flash.rtmp.input = visual
profile.flash.rtmp.output = visual
profile.flash.rtmp.suffix = -sm.flv
profile.flash.rtmp.mimetype = visual/x-flv
profile.flash.rtmp.flavor = engage/streaming

# Distribution format definition for 4 by 3 flash presenter/presentation download
profile.flash.http.name = Flash Downloads (*.flv)
profile.flash.http.input = visual
profile.flash.http.output = visual
profile.flash.http.suffix = -25fps.flv
profile.flash.http.mimetype = visual/x-flv
profile.flash.http.flavor = engage/download

####
# Image formats, used for covers and slide previews.
#
# ATTENTION:
# Do not change the identifier of the formats below. Various indexer plugins,
# the feed generator and the rest servlet rely on their existence.
##

# Cover image ui
profile.ui-cover.http.name = cover image
profile.ui-cover.http.input = visual
profile.ui-cover.http.output = cover
profile.ui-cover.http.suffix = -ui-cover.jpg
profile.ui-cover.http.mimetype = image/jpeg
profile.ui-cover.http.flavor = cover/ui
profile.ui-cover.http.ffmpeg.commandline = -i #{in.path} -y -r 1 -t 1 -f image2 -s 160x120 #{out.dir}/#{in.name}#{out.suffix}

# Cover image feeds
profile.feed-cover.http.name = cover image for feeds
profile.feed-cover.http.input = visual
profile.feed-cover.http.output = cover
profile.feed-cover.http.suffix = -feed-cover.jpg
profile.feed-cover.http.mimetype = image/jpeg
profile.feed-cover.http.flavor = cover/feed
profile.feed-cover.http.ffmpeg.commandline = -i #{in.path} -y -r 1 -t 1 -f image2 -s 72x54 #{out.dir}/#{in.name}#{out.suffix}

# Slide images ui
profile.ui-slides.http.name = slides
profile.ui-slides.http.input = visual
profile.ui-slides.http.output = imagesequence
profile.ui-slides.http.suffix = -%06d.jpg
profile.ui-slides.http.mimetype = image/jpeg
profile.ui-slides.http.flavor =
profile.ui-slides.http.ffmpeg.commandline = -i #{in.path} -y -r 1 -f image2 -s 500x376 #{out.dir}/#{in.name}#{out.suffix}

####
# Special preview formats used by the media analysis service.
# Only change them if you know what you are doing.
##

# Distribution format definition for simple avi downloads
profile.analysis-tracks.http.name = mpeg4/avi 160x120 5fps low framerate
profile.analysis-tracks.http.input = visual
profile.analysis-tracks.http.output = visual
profile.analysis-tracks.http.suffix = .avi
profile.analysis-tracks.http.mimetype = visual/avi
profile.analysis-tracks.http.flavor = visual/analysis
profile.analysis-tracks.http.ffmpeg.commandline = -i #{in.path} -y -r 5 -s 160x120 #{out.dir}/#{in.name}#{out.suffix}

# Slide previews
profile.analysis-slides.http.name = slide previews
profile.analysis-slides.http.input = visual
profile.analysis-slides.http.output = image
profile.analysis-slides.http.suffix = -%06d.jpg
profile.analysis-slides.http.mimetype = image/jpeg
profile.analysis-slides.http.flavor = image/jpeg
profile.analysis-slides.http.ffmpeg.commandline = -i #{in.path} -y -r 1 -f image2 -s 500x376 #{out.dir}/#{in.name}#{out.suffix}